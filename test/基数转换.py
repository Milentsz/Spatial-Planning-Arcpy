import arcpy

inTable = "输入要素图层"
outFeatures= r"输出要素图层"

#复制一个新的要素并保留DLBM和DLMC两个字段，防止对原始数据误操作，字段显示干净
fields = ["DLBM", "DLMC"]
arcpy.CopyFeatures_management(inFeatures,outFeatures)
arcpy.DeleteField_management(outFeatures, fields, "KEEP_FIELDS")

#用地用海各字段，如果是输出shp需要新增面积字段
checkfields=[["YDYHFLYJDM",'用地用海分类一级代码'],
             ["YDYHFLYJMC",''用地用海分类一级名称'],
             ["YDYHFLDM",'用地用海分类代码',"call(!DLBM!)"],
             ["YDYHFLMC",''用地用海分类名称',"call(!BM_MC!)"]
            ]

#基数转换三调-用地用海代码，可以外置TXT读取
codeblock_JSZH = """
def call(JSZH):
    A= {
    '0304':'0501',
    '0306':'0502',  
    '0402':'0503',  
    '0603':'1003',  
    '1106':'0506',  
    '1108':'0504',  
    '0101':'0101',  
    '0102':'0102',  
    '0103':'0103',  
    '0201':'0201',  
    '0202':'0202',  
    '0203':'0203',  
    '0204':'0204',  
    '0301':'0301',  
    '0302':'0302',  
    '0305':'0303',  
    '0307':'0304',  
    '0401':'0401',  
    '0403':'0402',  
    '0404':'0403',  
    '05H1':'09',     # 需要细分，部分可能在居住
    '0508':'11',     # 需要细分
    '0601':'1001',  
    '0602':'1002',  
    '0701':'0701',  
    '0702':'0703',  
    '08H1':'0801',  
    '08H2':'08',     # 需要细分，部分可能在居住
    '0809':'13',     # 需要细分
    '0810':'14',     # 需要细分
    '0810A':'1403',     # 广场用地
    '09':'15',       # 需要细分
    '1001':'1201',   # 需要细分，部分可能是1208交通场站用地
    '1002':'1206',  
    '1003':'1202',  
    '1004':'1207',  #可能是0601乡村道路用地
    '1005':'1208',  
    '1006':'0601',  #可能是2303田间道
    '1007':'1203',  
    '1008':'1204',  
    '1009':'1205',  
    '1101':'1701',  
    '1102':'1702',  
    '1103':'1703',  
    '1104':'1704',  
    '1104A':'1704',  
    '1107':'1705',  #可能是1311干渠
    '1107A':'1705',  #可能是1311干渠
    '1109':'1312',  #坑塘养殖
    '1201':'2301',  
    '1202':'06',    #需要细分
    '1203':'2302',  
    '1204':'2304',  
    '1205':'2305',  
    '1206':'2306',  
    '1207':'2307'   
    }
    y=A.get(A)
    return y"""

#基数转换代码-名称，可以外置TXT读取
codeblock_BM_MC = """ 
def call(BM_MC):
    C= {
        '01':'耕地',
        '0101':'水田',
        '0102':'水浇地',
        '0103':'旱地',
        '02':'园地',
        '0201':'果园',
        '0202':'茶园',
        '0203':'橡胶园',
        '0204':'其他园地',
        '03':'林地',
        '0301':'乔木林地',
        '0302':'竹林地',
        '0303':'灌木林地',
        '0304':'其他林地',
        '04':'草地',
        '0401':'天然牧草地',
        '0402':'人工牧草地',
        '0403':'其他草地',
        '05':'湿地',
        '0501':'森林沼泽',
        '0502':'灌丛沼泽',
        '0503':'沼泽草地',
        '0504':'其他沼泽地',
        '0505':'沿海滩涂',
        '0506':'内陆滩涂',
        '0507':'红树林地',
        '06':'农业设施建设用地',
        '0601':'乡村道路用地',
        '060101':'村道用地',
        '060102':'村庄内部道路用地',
        '0602':'种植设施建设用地',
        '0603':'畜禽养殖设施建设用地',
        '0604':'水产养殖设施建设用地',
        '07':'居住用地',
        '0701':'城镇住宅用地',
        '070101':'一类城镇住宅用地',
        '070102':'二类城镇住宅用地',
        '070103':'三类城镇住宅用地',
        '0702':'城镇社区服务设施用地',
        '0703':'农村宅基地',
        '070301':'一类农村宅基地',
        '070302':'二类农村宅基地',
        '0704':'农村社区服务设施用地',
        '08':'公共管理与公共服务用地',
        '0801':'机关团体用地',
        '0802':'科研用地',
        '0803':'文化用地',
        '080301':'图书与展览用地',
        '080302':'文化活动用地',
        '0804':'教育用地',
        '080401':'高等教育用地',
        '080402':'中等职业教育用地',
        '080403':'中小学用地',
        '080404':'幼儿园用地',
        '080405':'其他教育用地',
        '0805':'体育用地',
        '080501':'体育场馆用地',
        '080502':'体育训练用地',
        '0806':'医疗卫生用地',
        '080601':'医院用地',
        '080602':'基层医疗卫生设施用地',
        '080603':'公共卫生用地',
        '0807':'社会福利用地',
        '080701':'老年人社会福利用地',
        '080702':'儿童社会福利用地',
        '080703':'残疾人社会福利用地',
        '080704':'其他社会福利用地',
        '09':'商业服务业用地',
        '0901':'商业用地',
        '090101':'零售商业用地',
        '090102':'批发市场用地',
        '090103':'餐饮用地',
        '090104':'旅馆用地',
        '090105':'公用设施营业网点用地',
        '0902':'商务金融用地',
        '0903':'娱乐康体用地',
        '090301':'娱乐用地',
        '090302':'康体用地',
        '0904':'其他商业服务业用地',
        '10':'工矿用地',
        '1001':'工业用地',
        '100101':'一类工业用地',
        '100102':'二类工业用地',
        '100103':'三类工业用地',
        '1002':'采矿用地',
        '1003':'盐田',
        '11':'仓储用地',
        '1101':'物流仓储用地',
        '110101':'一类物流仓储用地',
        '110102':'二类物流仓储用地',
        '110103':'三类物流仓储用地',
        '1102':'储备库用地',
        '12':'交通运输用地',
        '1201':'铁路用地',
        '1202':'公路用地',
        '1203':'机场用地',
        '1204':'港口码头用地',
        '1205':'管道运输用地',
        '1206':'城市轨道交通用地',
        '1207':'城镇道路用地',
        '1208':'交通场站用地',
        '120801':'对外交通场站用地',
        '120802':'公共交通场站用地',
        '120803':'社会停车场用地',
        '1209':'其他交通设施用地',
        '13':'公用设施用地',
        '1301':'供水用地',
        '1302':'排水用地',
        '1303':'供电用地',
        '1304':'供燃气用地',
        '1305':'供热用地',
        '1306':'通信用地',
        '1307':'邮政用地',
        '1308':'广播电视设施用地',
        '1309':'环卫用地',
        '1310':'消防用地',
        '1311':'干渠',
        '1312':'水工设施用地',
        '1313':'其他公用设施用地',
        '14':'绿地与开敞空间用地',
        '1401':'公园绿地',
        '1402':'防护绿地',
        '1403':'广场用地',
        '15':'特殊用地',
        '1501':'军事设施用地',
        '1502':'使领馆用地',
        '1503':'宗教用地',
        '1504':'文物古迹用地',
        '1505':'监教场所用地',
        '1506':'殡葬用地',
        '1507':'其他特殊用地',
        '16':'留白用地',
        '17':'陆地水域',
        '1701':'河流水面',
        '1702':'湖泊水面',
        '1703':'水库水面',
        '1704':'坑塘水面',
        '1705':'沟渠',
        '1706':'冰川及常年积雪',
        '18':'渔业用海',
        '1801':'渔业基础设施用海',
        '1802':'增养殖用海',
        '1803':'捕捞海域',
        '19':'工矿通信用海',
        '1901':'工业用海',
        '1902':'盐田用海',
        '1903':'固体矿产用海',
        '1904':'油气用海',
        '1905':'可再生能源用海',
        '1906':'海底电缆管道用海',
        '20':'交通运输用海',
        '2001':'港口用海',
        '2002':'航运用海',
        '2003':'路桥隧道用海',
        '21':'游憩用海',
        '2101':'风景旅游用海',
        '2102':'文体休闲娱乐用海',
        '22':'特殊用海',
        '2201':'军事用海',
        '2202':'其他特殊用海',
        '23':'其他土地',
        '2301':'空闲地',
        '2302':'田坎',
        '2303':'田间道',
        '2304':'盐碱地',
        '2305':'沙地',
        '2306':'裸土地',
        '2307':'裸岩石砾地',
        '24':'其他海域'
    }
    p=C.get(C)
    return p"""
    
#新增字段
# for checkfield in checkfields:
#     arcpy.management.AddField(inTable,checkfield[0],"Text",field_alias=checkfield[1]

#计算字段
arcpy.management.CalculateField(inTable, checkfield[0][3], "call(!DLBM!)", "PYTHON3", codeblock_JSZH)
arcpy.management.CalculateField(inTable, checkfield[0][1], !YDYHFLDM![0:2], "PYTHON3",)
arcpy.management.CalculateField(inTable, checkfield[0][2], "call(!YDYHFLDM!)", "PYTHON3", codeblock_BM_MC)
arcpy.management.CalculateField(inTable, checkfield[0][4], "call(!YDYHFLYJDM!)", "PYTHON3", codeblock_BM_MC)

try:
    arcpy.management.MatchLayerSymbologyToAStyle(os.path.basename(outFeatures), "$feature.YDYHFLMC", 
                                             r"..\国土空间规划用地地类编码名称符号库.stylx")
except:
    pass
